@using EdhTracker.Data
<MudForm> 
    <MudGrid>
        <MudItem xs="12">
            <MudInput T="int" HelperText="Number of players" @bind-Value=playerCount @onchange="SetupGame"></MudInput>
        </MudItem>

        @for (int i = 0; i < playerCount; i++)
        {
            <MudItem xs="3">
                <MudRadio T="bool">Winner</MudRadio>
            </MudItem>
            <MudItem xs="9">
                <MudSelect T="Deck">
                    @foreach (var deck in DataContext.Decks)
                    {
                        <MudSelectItem Value="deck">@deck.Commander.Name</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        }

        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="AddGame">Add</MudButton>
    </MudGrid>
</MudForm>

@code {
    [Parameter, EditorRequired]
    public Data.Game Game { get; set; } = null!;

    [Parameter, EditorRequired]
    public DataContext DataContext { get; set; } = null!;

    private int playerCount = 4;

    private void UpdateDeck(ChangeEventArgs d, int i)
    {
        //Game.Seats[i].Deck = new Data.Deck() { Commander = new Data.Commander { Name = d?.Value?.ToString() ?? "" } };
    }

    private void SetupGame()
    {
        for (int i = Game.Seats.Count; i < playerCount; i++) 
            Game.Seats.Add(new());

        if (Game.Seats.Count > playerCount) 
            Game.Seats = Game.Seats.Take(playerCount).ToList();
    }

    private void AddGame()
    {
        //Todo
    }
}
