@page "/Group/{podId:guid}"
@using EdhTracker.Components
@using EdhTracker.Data
@using Microsoft.EntityFrameworkCore

<PageTitle>Play Group</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@Pod.Name</MudText>

<MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="OpenAddGameDialog">Add Game</MudButton>

<MudButton Color="Color.Primary" Variant="Variant.Filled" Href=@($"/Group/{PodId}/Players")>Manage Players</MudButton>

<MudButton Color="Color.Primary" Variant="Variant.Filled" Href=@($"/Group/{PodId}/Decks")>Manage Decks</MudButton>

@if (isAddGameShown)
{
    <MudItem sm="7" xs="12">
        <MudPaper Class="pa-4">
            <AddGameForm Game="game" DataContext="DataContext"></AddGameForm>
        </MudPaper>
    </MudItem>
}

@foreach (var game in Pod.GameHistory.TakeLast(10))
{
    <PlayedGameCard Game="game"></PlayedGameCard>
}

@code 
{
    bool isAddGameShown = false;
    bool isAddDeckShown = false;

    string Deck1 = string.Empty;
    string Deck2 = string.Empty;
    string Deck3 = string.Empty;
    string Deck4 = string.Empty;

    private Game game = new Game();

    protected override async Task OnInitializedAsync()
    {
        DataContext = await DataContextFactory.CreateDbContextAsync();
    }

    private DataContext DataContext;

    [Parameter]
    public Guid PodId { get; set; }

    [Inject]
    public IDbContextFactory<DataContext> DataContextFactory { get; set; }

    [Inject]
    public IDialogService DialogService { get; set; }

    public PlayGroup Pod { get => DataContext.PlayGroups.Find(PodId)!; }

    public void OpenAddGameDialog()
    {
        isAddGameShown = true;
    }
}
