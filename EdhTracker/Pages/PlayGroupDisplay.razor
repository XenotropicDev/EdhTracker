@page "/Group/{GroupId:guid}"
@using EdhTracker.Components
@using EdhTracker.Data
@using Microsoft.EntityFrameworkCore
@inject IDialogService DialogService
@inject UserSessionService userSession

<PageTitle>Play Group</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@PlayGroup.Name</MudText>

<MudStack Class="pa-lg-4 pa-md-2" Row="true" Spacing="1">
    <MudButton FullWidth="false" @onclick="OpenAddGameDialog" Variant="Variant.Filled" Color="Color.Primary">
        Add Game
    </MudButton>

    <MudButton FullWidth="false" Color="Color.Primary" Variant="Variant.Filled" Href=@($"/Group/{GroupId}/Players")>Manage Players</MudButton>

    <MudButton FullWidth="false" Color="Color.Primary" Variant="Variant.Filled" Href=@($"/Group/{GroupId}/Decks")>Manage Decks</MudButton>
</MudStack>

<MudPaper Class="pa-lg-4 pa-md-2">
    <MudGrid>
        @foreach (var game in PlayGroup.GameHistory.OrderByDescending(g => g.PlayTime).Take(12))
        {
            <MudItem sm="12" md="6" lg="4">
                <PlayedGameCard Game="game"></PlayedGameCard>
            </MudItem>
        }
    </MudGrid>
</MudPaper>

@code 
{
    protected override async Task OnInitializedAsync()
    {
        DataContext = await DataContextFactory.CreateDbContextAsync();

        userSession.SelectedPlayGroup ??= PlayGroup;

        PlayGroup = DataContext.PlayGroups.Find(GroupId)!;
    }

    private DataContext DataContext = null!;

    [Parameter]
    public Guid GroupId { get; set; }

    [Inject]
    public IDbContextFactory<DataContext> DataContextFactory { get; set; }

    public PlayGroup PlayGroup { get; private set; } = null!;

    private async Task OpenAddGameDialog()
    {
        var dialogParams = new DialogParameters<AddGameDialog>();
        dialogParams.Add(x => x.GroupId, GroupId);

        var dialog = DialogService.Show<AddGameDialog>("Add Game", dialogParams);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            PlayGroup = DataContext.PlayGroups.Include(pg => pg.GameHistory).First(pg => pg.Id == GroupId);
            StateHasChanged();
        }
    }
}
