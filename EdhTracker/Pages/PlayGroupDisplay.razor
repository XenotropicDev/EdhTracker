@page "/Group/{GroupId:guid}"
@using EdhTracker.Components
@using EdhTracker.Data
@using Microsoft.EntityFrameworkCore
@inject IDialogService DialogService

<PageTitle>Play Group</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@PlayGroup.Name</MudText>

<MudButton @onclick="OpenAddGameDialog" Variant="Variant.Filled" Color="Color.Primary">
    Add Game
</MudButton>

<MudButton Color="Color.Primary" Variant="Variant.Filled" Href=@($"/Group/{GroupId}/Players")>Manage Players</MudButton>

<MudButton Color="Color.Primary" Variant="Variant.Filled" Href=@($"/Group/{GroupId}/Decks")>Manage Decks</MudButton>

<MudPaper Class="pa-4">
    <MudGrid>
        @foreach (var game in PlayGroup.GameHistory.TakeLast(12))
        {
            <MudItem xs="12" sm="4">
                <PlayedGameCard Game="game"></PlayedGameCard>
            </MudItem>
        }
    </MudGrid>
</MudPaper>

@code 
{
    bool isAddDeckShown = false;

    string Deck1 = string.Empty;
    string Deck2 = string.Empty;
    string Deck3 = string.Empty;
    string Deck4 = string.Empty;

    private Game game = new Game();

    protected override async Task OnInitializedAsync()
    {
        DataContext = await DataContextFactory.CreateDbContextAsync();
    }

    private DataContext DataContext;

    [Parameter]
    public Guid GroupId { get; set; }

    [Inject]
    public IDbContextFactory<DataContext> DataContextFactory { get; set; }

    public PlayGroup PlayGroup { get => DataContext.PlayGroups.Find(GroupId)!; }

    private void OpenAddGameDialog()
    {
        var dialogParams = new DialogParameters<AddGameDialog>();
        dialogParams.Add(x => x.GroupId, GroupId);

        DialogService.Show<AddGameDialog>("Add Game", dialogParams);
    }
}
