@page "/Group/{podId:guid}/Decks"
@using EdhTracker.Components
@using EdhTracker.Data
@using Microsoft.EntityFrameworkCore
@using Org.OpenAPITools.Api
@using System.ComponentModel.DataAnnotations
@using Serilog
@inject IDialogService DialogService

<PageTitle>@Pod.Name Decks</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@Pod.Name Decks</MudText>

<MudStack Row="true">
    <MudButton Color="Color.Primary" OnClick="OpenAddDeckDialog">Add Deck</MudButton>
    <MudSwitch Class="object-right" Color="Color.Primary" @bind-Value="showGrid">Grid display</MudSwitch>
</MudStack>

@if (!showGrid)
{
    <MudPaper Class="pa-lg-4 pa-md-2">
        <MudGrid>
            @foreach (var deck in Pod.Decks)
            {
                <MudItem xs="12" md="6" lg="4" xl="3">
                    <DeckCard Deck="deck"></DeckCard>
                </MudItem>
            }
        </MudGrid>
    </MudPaper>
}

@if (showGrid)
{
    <DeckGrid Decks="Pod.Decks"></DeckGrid>
}


@code
{
    private bool showGrid = true;

    protected override async Task OnInitializedAsync()
    {
        DataContext = await DataContextFactory.CreateDbContextAsync();
    }
    private DataContext DataContext;

    [Parameter]
    public Guid PodId { get; set; }

    [Inject]
    public IDbContextFactory<DataContext> DataContextFactory { get; set; }

    public PlayGroup Pod { get => DataContext.PlayGroups.Include(p => p.Players).Include(p => p.Decks).First(p => p.Id == PodId); }

    private async Task OpenAddDeckDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true };
        var dialogParams = new DialogParameters<AddDeckDialog>();
        dialogParams.Add(x => x.DataContext, DataContext);
        dialogParams.Add(x => x.Pod, Pod);

        try
        {
            var dialog = DialogService.Show<AddDeckDialog>("Add Deck", dialogParams, options);
            var result = await dialog.Result;

            if (!result.Canceled)
            {
                await DataContext.Entry(Pod).ReloadAsync();
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Log.Error(ex, "Issue during add deck dialog");
            throw;
        }
    }
}
