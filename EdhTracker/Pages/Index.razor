@page "/"
@using EdhTracker.Components
@using EdhTracker.Data
@using Microsoft.EntityFrameworkCore
@using System.Collections.ObjectModel
@inject IDbContextFactory<DataContext> ContextFactory
@inject IDialogService DialogService
@inject NavigationManager Navigation
@inject UserSessionService UserSession

<PageTitle>Index</PageTitle>
<MudText>Select a Pod</MudText>
<MudSelect @bind-Value="@pod">
    @foreach (var item in playGroups)
    {
        <MudSelectItem Value="@item"></MudSelectItem>
    }
</MudSelect>
<MudButton OnClick="ShowPod">Show Pod</MudButton>

<MudButton OnClick="ShowGroupCreate">Add a new play group</MudButton>

@if (isCreateShown)
{
    <MudTextField Value="NewGroupName" Label="Group Name" @bind-Text=NewGroupName></MudTextField>
    <MudButton OnClick="AddGroup">Add</MudButton>
}

@code {
    DataContext Context;

    PlayGroup pod;

    ObservableCollection<PlayGroup> playGroups;

    string NewGroupName = string.Empty;

    bool isCreateShown = false;

    protected override Task OnInitializedAsync()
    {
        Context = ContextFactory.CreateDbContext();

        playGroups = new ObservableCollection<PlayGroup>(Context.PlayGroups);
        pod = playGroups.First();
        UserSession.SelectedPlayGroup = pod;

        return base.OnInitializedAsync();
    }

    public void ShowGroupCreate()
    {
        isCreateShown = true;
        NewGroupName = string.Empty;
    }

    public async Task AddGroup()
    {
        pod = new PlayGroup { Name = NewGroupName };
        Context.PlayGroups.Add(pod);
        await Context.SaveChangesAsync();

        ShowPod();
    }

    public void ShowPod()
    {
        UserSession.SelectedPlayGroup = pod;
        Navigation.NavigateTo($"/Group/{pod.Id}");
    }
}